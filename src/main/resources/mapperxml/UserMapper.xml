<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hqq.colorful_life.model.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.hqq.colorful_life.model.domain.User">
    <!--@mbg.generated-->
    <!--@Table user-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="head_image" jdbcType="VARCHAR" property="headImage" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
    <result column="sign_num" jdbcType="INTEGER" property="signNum" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="role" jdbcType="INTEGER" property="role" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_name, `password`, head_image, sex, signature, sign_num, create_id, create_time, 
    update_time, `role`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hqq.colorful_life.model.domain.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user (user_name, `password`, head_image, 
      sex, signature, sign_num, 
      create_id, create_time, update_time, 
      `role`)
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{headImage,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{signature,jdbcType=VARCHAR}, #{signNum,jdbcType=INTEGER}, 
      #{createId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{role,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hqq.colorful_life.model.domain.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="headImage != null">
        head_image,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="signature != null">
        signature,
      </if>
      <if test="signNum != null">
        sign_num,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="role != null">
        `role`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="signNum != null">
        #{signNum,jdbcType=INTEGER},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hqq.colorful_life.model.domain.User">
    <!--@mbg.generated-->
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        head_image = #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="signNum != null">
        sign_num = #{signNum,jdbcType=INTEGER},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null">
        `role` = #{role,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hqq.colorful_life.model.domain.User">
    <!--@mbg.generated-->
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      head_image = #{headImage,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      signature = #{signature,jdbcType=VARCHAR},
      sign_num = #{signNum,jdbcType=INTEGER},
      create_id = #{createId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `role` = #{role,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from user
      where user_name = #{userName}
    </select>
  <select id="selectLogin" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where user_name = #{userName} and password = #{password}
  </select>
    <select id="selectAllUser" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from user
      order by sign_num desc
    </select>
    <select id="selectListByKeyword" resultMap="BaseResultMap" parameterType="java.lang.String">
      select
      <include refid="Base_Column_List" />
      from user
      <where>
        <if test="keyword != null and keyword != ''">
          and user_name like #{keyword}
        </if>
      </where>
      order by update_time desc
    </select>
</mapper>